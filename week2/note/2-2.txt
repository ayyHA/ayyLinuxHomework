  文件 = 元数据（控制） + 用户数据	
  元数据集中存放在目录文件
  ls->显示目录文件的内容
  ls -l: 前十列中首列字母表示文件类型 -: 普通文件  d: 目录文件
                                      l: 链接文件  c: 字符设备文件
				      p: 管道文件  b: 快设备文件
         前十列中后9列表示文件的权限，其中分别以三个为一组，表示读/写/执行（rwx），共有三组，依次为：文件主人、同组用户、其他人
         前十列后紧接着的一列是文件链接的个数，之后是用户名、组名 、文件大小、日期、目录名
  
  chmod指令: 可更改文件权限
语法: chmod 权限 文件
e.g.: chmod 777 1-1.c 
注: 此指令将1-1.c文件的权限改为了 任何人都“可读可写可执行”，一个7对应着二进制数111，即对应了上面所说的 ls -l 的rwx
    而将.c文件变成可执行文件它依旧不可执行，因为c文件需要通过编译链接才可执行；而脚本文件改变权限则可执行，因为其为解释方式执行
    文件权限可通过 ls -l 文件名 来查看
 

  time指令: 显示文件执行时间
语法: time 文件 
e.g.: time 1-1
注: 可以显示以下几种时间|real(总的时间)
		       <|user(跑代码的时间)
			|sys(切换不同文件等的时间)
  
  file指令: 显示文件编码方式
语法: file 文件
e.g.: file ./1-2.sh

  文件存储分为: |连续存储
		|链式存储
		|索引存储

  ELF:  |relocatable   可重定位
	|execatable    可执行
	|core dump     核心转储文件
	|shared object 动态库

  编程报错: |编译->语法/静态错误
	    |运行->内存/动态错误|strace(跟踪文件)
				|gdb(调试工具)
  
  进入调试指令: 1、gcc 文件.c -o 文件-g
		2、gdb 文件 

  strip指令: 删除调试工具
语法: strip 文件
e.g.: strip 1-2

  pgrep指令: 查找进程
  
  strace指令:

  echo指令: 

  sleep 300 | sleep 400& 
            |	       |
	    v	       v
 	 管道符号 后台执行，让出终端

  file decription: |0 stdin
		   |1 stdout
		   |2 stderr

  进程通过匿名管道文件进行通信，可通过ls -l /proc/进程/fd 查看管道详情

  ps -ef: 给出当前在运行进程的详细信息
  
  kill指令: 终结进程
语法: kill 进程号(以后统称PID)

  c语言获得进程号的方法: getpid()
  
  lsof -p 进程号: 列出进程打开文件

